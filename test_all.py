#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤–µ–±-–∞–¥–º–∏–Ω–∫–∏
"""

import requests
import json
import time

BASE_URL = "http://localhost:8001"

def test_page(url, expected_text, page_name):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    try:
        response = requests.get(f"{BASE_URL}{url}")
        if response.status_code == 200 and expected_text in response.text:
            print(f"‚úÖ {page_name} - OK")
            return True
        else:
            print(f"‚ùå {page_name} - –û—à–∏–±–∫–∞ (–∫–æ–¥: {response.status_code})")
            return False
    except Exception as e:
        print(f"‚ùå {page_name} - –û—à–∏–±–∫–∞: {e}")
        return False

def test_api(url, method="GET", data=None, api_name=""):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API"""
    try:
        if method == "GET":
            response = requests.get(f"{BASE_URL}{url}")
        elif method == "POST":
            response = requests.post(f"{BASE_URL}{url}", json=data)
        
        if response.status_code == 200:
            print(f"‚úÖ API {api_name} - OK")
            return True
        else:
            print(f"‚ùå API {api_name} - –û—à–∏–±–∫–∞ (–∫–æ–¥: {response.status_code})")
            return False
    except Exception as e:
        print(f"‚ùå API {api_name} - –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Bot Creator Admin")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    print("\nüì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü:")
    pages = [
        ("/", "Dashboard", "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        ("/users", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"),
        ("/bots", "–ë–æ—Ç—ã", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –±–æ—Ç–æ–≤"),
        ("/generations", "–ì–µ–Ω–µ—Ä–∞—Ü–∏–∏", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π"),
        ("/monetization", "–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏"),
        ("/user-management", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ø—ã—Ç–∫–∞–º–∏"),
        ("/admins", "–ê–¥–º–∏–Ω—ã", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–æ–≤")
    ]
    
    page_results = []
    for url, expected_text, name in pages:
        result = test_page(url, expected_text, name)
        page_results.append(result)
        time.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    print("\nüîå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API:")
    api_tests = [
        ("/api/stats", "GET", None, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
        ("/api/payments", "GET", None, "–ü–ª–∞—Ç–µ–∂–∏"),
        ("/api/users/search", "POST", {"username": "ilya_ttr"}, "–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    ]
    
    api_results = []
    for url, method, data, name in api_tests:
        result = test_api(url, method, data, name)
        api_results.append(result)
        time.sleep(0.5)
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("=" * 50)
    
    pages_ok = sum(page_results)
    pages_total = len(page_results)
    print(f"–°—Ç—Ä–∞–Ω–∏—Ü—ã: {pages_ok}/{pages_total} —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    api_ok = sum(api_results)
    api_total = len(api_results)
    print(f"API: {api_ok}/{api_total} —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    total_ok = pages_ok + api_ok
    total_total = pages_total + api_total
    print(f"–û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {total_ok}/{total_total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if total_ok == total_total:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏!")
    else:
        print(f"\n‚ö†Ô∏è  {total_total - total_ok} —Ç–µ—Å—Ç–æ–≤ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º—É.")
    
    print("\nüåê –í–µ–±-–∞–¥–º–∏–Ω–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8001")
    print("üìù –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: demo_script.md")

if __name__ == "__main__":
    main()
